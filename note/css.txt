/**************************************************/
flex布局总结
父级里
display:flex; 强调用flex布局
flex-wrap:如果父级被撑满如何排列，wrap换行,nowrap强制在一行;
flex-direction:规定flex里布局方向，row横向从左到右，column纵向从上到下;
align-items (适用于父类容器上)align-items:center;
设置或检索弹性盒子元素在侧轴（纵轴）方向上的对齐方式。flex-start,flex-end,center,baseline,strecth
justify-content(父容器上) 定义横轴排列方式
设置或检索弹性盒子元素在主轴（横轴）方向上的对齐方式 flex-start,flex-end,center,space-between,space-around,space-evenly

排列的子元素里
flex-grow:如果父级有多余的则放大占领多余的空间;
flex-shrink 如果父级空间不够 则缩小以适应
flex-basis 替换width声明  声明这个元素的宽度，会覆盖width属性
//简写
flex:0 0 50%; 等价于 flex-grow:0; flex-shrink:0; flex-basis:50%;
注意flex:0 0 0和flex:0 0 0%意义是不一样的；
简单的例子：
<div class="wrap"> 
   <ul class="main">
     <li></li>
     <li style="height:200px;"></li>
     <li></li>
   </ul> 
</div>
.wrap{width:100%;}
.main{display: flex; flex-direction:row;flex-wrap:wrap; align-items:center;justify-content:flex-start;}
.main li{flex:0 0 25%;height:100px; background:#ccc;list-style: none; margin-left:5%;margin-top:20px;}
/*********************************************************************************************************/
//css3引入本地字体文件
@font-face{
	font-family:fzjq;  //给引入字体文件命名  不需要''  font-family不需要引号
	src:url('../../static/fzjqgbk.ttf') //引用路径
}

/************************************************************************************/
CSS3 @media 查询
//实例
如果文档宽度小于 300 像素则修改背景颜色(background-color):
@media screen and (max-width: 300px) {
    body {
        background-color:lightblue;
    }
}
//语法
@media mediatype and|not|only (media feature) {
    CSS-Code;
}
mediatype一般用 screen	用于检测电脑屏幕，平板电脑，智能手机等。

/***********************************************************************************/
h5头部信息
<head>
　　<meta charset="utf-8">
　　<title>口袋小鼠</title>
　　<meta name="description" content="">
　　<!-- 避免IE使用兼容模式 -->
　　<meta http-equiv="X-UA-Compatible" content="IE=edge">
　　<!-- 启用360浏览器的极速模式(webkit) -->
　　<meta name="renderer" content="webkit">
　　<!-- 是否启动webapp功能，会删除默认的苹果工具栏和菜单栏。 -->
　　<meta name="apple-mobile-web-app-capable" content="yes">
　　<!-- 据实际的页面设计的主体色为搭配来进行设置。 -->
　　<meta name="apple-mobile-web-app-status-bar-style" content="black">
　　<!-- 忽略页面中的数字识别为电话号码,email识别 -->
　　<meta name="format-detection" content="telephone=no, email=no">
　　<!-- 视图窗口，移动端特属的标签。 -->
　　<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no">
</head>

/****************************************************************************************/
//CSS Colors
CSS的颜色可以通过以下方法指定：

1十六进制颜色 #ff0000;
2RGB颜色     rgb(255,0,0);
3RGBA颜色    rgba(255,0,0,0.5);
4HSL色彩     hsl(120,65%,75%);
5HSLA颜色    hsla(120,65%,75%,0.3);
6预定义/跨浏览器的颜色名称  blue   red  yellow....

/**************************************************************************************/
//CSS calc() 函数
使用 calc() 函数计算 <div> 元素的宽度:
//定义与用法
calc() 函数用于动态计算长度值。

需要注意的是，运算符前后都需要保留一个空格，例如：width: calc(100% - 10px)；
任何长度值都可以使用calc()函数进行计算；
calc()函数支持 "+", "-", "*", "/" 运算；
calc()函数使用标准的数学运算优先级规则；
#div1 {
    position: absolute;
    left: 50px;
    width: calc(100% - 100px);
    border: 1px solid black;
    background-color: yellow;
    padding: 5px;
    text-align: center;
}
/**************************************************************************************/
//css3动画
背景颜色逐渐地从红色变化到蓝色：

@keyframes mymove
    {
    from {background-color:red;}
    to {background-color:blue;}
}
 
/*Safari 和 Chrome:*/
@-webkit-keyframes mymove
{
    from {background-color:red;}
    to {background-color:blue;} 
}
#test{animation:mymove  infinite  2s alternate;}

@keyframes 规则和所有动画属性
@keyframes 规定动画
animation 所有动画属性的简写属性，除 animation-play-state
animation-name @keyframes 动画名称
animation-duration 动画完成一个周期所花秒或毫秒数。默认是 0
animation-timing-function 动画的速度曲线。默认是 "ease"
animation-delay 动画延迟多久开始。默认是 0
animation-iteration-count 规定动画被播放的次数。默认是 1
animation-direction 规定动画是否在下一周期逆向地播放。默认是 "normal"
animation-play-state 规定动画是否正在运行或暂停。默认是 "running"。

forwards 只执行一次然后停在动画最后的属性值
/////////////////////////
//过渡动画
div
{
transition: width 1s linear 2s;
}











