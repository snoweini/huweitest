终端上操作
ffmpeg -i http://aisylive.oss/xxxxxxx/xxxx/180209c001_3.m3u8  output.mp4
导出m3u8成mp4

小程序循环：
  <view class='shopBox' wx:for='{{con}}' wx:key='{{index}}' wx:for-index="index" wx:for-item="con">
    <view class='shopImg'>
      <image src='{{con.image1}}' />
    </view>
  </view>
  wx:key  和vue类似 需要给一个key值 一般把index给key
  wx:for-index 重新定义循环的KEY  默认是index
  wx:for-item  重新定义循环的VALUE  默认是item

小程序绑定事件传递参数；
这个和vue有些区别  小程序不能直接在事件里把参数带走  需要在节点上做一个绑定存储
<view wx:for="{{list}}"  wx:key="{{index}}" bindtap="pageTo" data-index="{{index}}"> 
//把数据存储在 一个新绑定的prop: data-index 上
....
</view>
js:
pageTo(e){//通过e属性找回自己的节点 读取节点上的绑定数据
    var index = e.currentTarget.dataset['index'];
    console.log(index)
}

小程序样式不能直接用本地图片做背景图，
只支持：1.线上地址的图片
       2.base64 格式的图片
       3.用<image>标签引入  用样式定位的方式来解决

跳转页面  
  页面上用<navigator url="/pages/b/b?id=1&tu='a.jpg' " hover-class="none"> //?后面是带的参数

  代码跳转 wx.navigateTo({//?后面是带的参数
			    url: '/pages/b/b?id=' + 1 + "&tu=" + 'a.jpg'
			  });
接收页面处理：
onLoad: function (options) {       //options用于接收上个页面传递过来的参数
  var that = this;
  that.setData({                             //this.setData的方法用于把传递过来的id转化成小程序模板语言
		 b_id: options.id,     //id是a页面传递过来的名称，a_id是保存在本页面的全局变量   {{b_id}}方法使用
		 b_tu: options.tu,
	  })
 }

/////// 微信组件 component
类似vue的组件component
1.创建
和普通页面一样，组件也可以创建四个文件。
4个文件中的js文件
//component.js
Component({
  lifetimes: {//组件的生命周期
     attached: function() {
      // 在组件实例进入页面节点树时执行
    },
    detached: function() {
      // 在组件实例被从页面节点树移除时执行
    },
    created(){}  在组件实例刚刚被创建时执行
    attached(){}  无 在组件实例进入页面节点树时执行 1.6.3
    ready(){} 在组件在视图层布局完成后执行  1.6.3
    moved(){} 在组件实例被移动到节点树另一个位置时执行  1.6.3
    detached(){} 在组件实例被从页面节点树移除时执行 1.6.3
    error (Object Error){}  每当组件方法抛出错误时执行 2.4.1

  },
  properties: {//接收prop传过来的值
     testxt:{//父级prop名称
       type:'string',  传递的数据类型
       value:'aaa'   默认值
     }
  },
  data: {//组件私有数据
     txt:"ccccc"
  },
  methods: {//组件上的方法
    ontap(){ ... }
  }，
  pageLifetimes: {
    // 组件所在页面的生命周期函数
    show: function () { },
    hide: function () { },
    resize: function () { },
  },

2.引入
home.json
父组件的json文件中引入组件
"usingComponents":{
     "home-item":"../components/home-item/home-item"
}
和vue一样 组件里也可以引入其他组件
3.调用
home.wxml
<!-- 首页列表 -->
  <view class='join-layout'>
    <block wx:for="{{joinDatas}}" wx:for-item="joinItem">
      <!-- 这里是引入的组件名称 -->
      <home-item id="homeItem"
           <!--绑定子组件发出的事件-->
           bind:signEvent="signEvent" 
           coverUrl='{{joinItem.dakaPic}}'
           activityTitle='{{joinItem.dakaName}}'
           signTimeRange='{{joinItem.dakaTimeRange}}'
           organizerStatus='{{organizerStatus}}'
           signTimes='{{joinItem.dakaNum}}'
           signStatus='{{joinItem.status}}'>
    </home-item>
  </block>
  </view>

4.父子组件之间的通信
和vue类似  父传子 用prop  子传父 this.triggerEvent('自定义函数名'，{'key':'传递的数据'})

/*******************/
请求接口
wx.request({
  url: 'test.php', //仅为示例，并非真实的接口地址
  data: {
    x: '',
    y: ''
  },
  header: {
    'content-type': 'application/json' // 默认值
  },
  success (res) {
    console.log(res.data)
  }
})
/*****************/
本地存储
存
wx.setStorage({
  key:"key",
  data:"value"
})
读取
wx.getStorage({
  key: 'key',
  success (res) {
    console.log(res.data)
  }
})
删除
wx.removeStorage({
  key: 'key',
  success (res) {
    console.log(res)
  }
})
清除全部
wx.clearStorage()
/************************/
微信登录
1.用微信方法wx.login 读取用户的code信息
2.读取到code信息后  再请求后端提供的登录接口 把code传给后端作为登录凭证
wx.login({
  success(res){
     if(res.code){
        //请求后端的登录接口
        wx.request({
          url:'test.com/login'，//后端提供的登录接口
          data:{
            code:res.code //把code传给后台作为登录的凭证
          }
        })
     }
  }
})
/**********************/
微信授权
要使用到一些设计用户隐私的功能时 需要进行授权操作；
// 可以通过 wx.getSetting 先查询一下用户是否授权了 "scope.record" 这个 scope
wx.getSetting({
  success(res) {
    if (!res.authSetting['scope.record']) {//如果不存在表示没有授权过
      wx.authorize({
        scope: 'scope.record',
        success () {
          // 用户已经同意小程序使用录音功能，后续调用 wx.startRecord 接口不会弹窗询问
          wx.startRecord()//调取录音功能
        }
      })
    }
  }
})
/*******************/
获取用户信息
wx.getUserInfo({
    success(res){
      console.log(res)
    }
})

https://starapplet.ee.cagoe.com/images/Chinese/star8txt0.png
https://starapplet.ee.cagoe.com/images/star/star6.png

https://starapplet.ee.cagoe.com/media/Chinese/video18/index.m3u8


https://starapplet.ee.cagoe.com/media/Chinese/video6/000.ts














账号：15101135905      密码：abc123








http://zipai1.sepapa.top:9999/10223808/hls/index.m3u8


http://wuma1.sepapa.top:9999/twwuma/tokyo-hot-n1149/hls/index.m3u8
http://wuma1.sepapa.top:9999/twwuma/tokyo-hot-n1102/hls/index.m3u8
http://wuma1.sepapa.top:9999/twwuma/tokyo-hot-n1098/hls/index.m3u8
http://wuma1.sepapa.top:9999/twwuma/tokyo-hot-n1101/hls/index.m3u8
http://wuma1.sepapa.top:9999/twwuma/tokyo-hot-n1153/hls/index.m3u8
http://wuma1.sepapa.top:9999/twwuma/tokyo-hot-n1172/hls/index.m3u8
http://wuma1.sepapa.top:9999/twwuma/tokyo-hot-n1169/hls/index.m3u8
http://wuma1.sepapa.top:9999/twwuma/tokyo-hot-n1186/hls/index.m3u8
http://wuma1.sepapa.top:9999/twwuma/tokyo-hot-n1183/hls/index.m3u8
http://wuma1.sepapa.top:9999/twwuma/tokyo-hot-n1188/hls/index.m3u8








